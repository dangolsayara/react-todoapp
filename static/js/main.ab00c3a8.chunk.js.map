{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","value","type","placeholder","onChange","e","target","onClick","preventDefault","text","completed","id","Math","random","Todo","todo","className","filter","el","TodoList","class","map","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOA0BeA,EAxBF,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,aAAaC,EAA8B,EAA9BA,MAAMC,EAAwB,EAAxBA,SAASC,EAAe,EAAfA,UAcvC,OACI,8BACE,iCACA,uBAAQC,MAAOD,EAAWE,KAAK,OAAOC,YAAY,gBAAgBC,SAfvD,SAACC,GAClBR,EAAaQ,EAAEC,OAAOL,UAed,wBAAQM,QAXE,SAACF,GACnBA,EAAEG,iBACFT,EAAS,GAAD,mBACHD,GADG,CACG,CAACW,KAAKT,EAAUU,WAAU,EAAOC,GAAiB,IAAdC,KAAKC,aAEpDhB,EAAa,KAM2BK,KAAK,SAArC,uBCFGY,G,MAhBF,SAAC,GAAgC,IAA/BL,EAA8B,EAA9BA,KAAKM,EAAyB,EAAzBA,KAAKjB,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,SAM3B,OACI,sBAAKiB,UAAU,OAAf,UACI,oBAAIA,UAAU,YAAd,SAA2BP,IAC3B,wBAAQF,QAPM,WAClBR,EAASD,EAAMmB,QAAO,SAAAC,GAAE,OAAGA,EAAGP,KAAOI,EAAKJ,QAMNK,UAAU,YAA1C,yBCSGG,EAlBE,SAAC,GAAsB,IAArBrB,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,SACrB,OACI,qBAAKqB,MAAM,iBAAX,SACI,oBAAIA,MAAM,YAAV,SACCtB,EAAMuB,KAAI,SAACN,GAAD,OACP,cAAC,EAAD,CACChB,SAAUA,EACVD,MAAOA,EAEPiB,KAAMA,EACNN,KAAMM,EAAKN,MAFNM,EAAKJ,YCQZW,MAZf,WAAgB,IAAD,EACkBC,mBAAS,IAD3B,mBACNvB,EADM,KACIH,EADJ,OAEU0B,mBAAS,IAFnB,mBAENzB,EAFM,KAEAC,EAFA,KAIb,OACE,sBAAKiB,UAAU,MAAf,UACA,cAAC,EAAD,CAAMlB,MAAOA,EAAOC,SAAUA,EAAWC,UAAWA,EAAWH,aAAcA,IAC7E,cAAC,EAAD,CAAUC,MAAOA,EAAOC,SAAUA,QCDvByB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ab00c3a8.chunk.js","sourcesContent":["import React from 'react'\n\nconst Form = ({setInputText,todos,setTodos,inputText}) => {\n\n  const inputHandler=(e)=>{\n    setInputText(e.target.value);\n\n  };\n\n  const submitHandler=(e)=>{\n    e.preventDefault();\n    setTodos([\n      ...todos,{text:inputText,completed:false, id:Math.random()*1000}\n    ]);\n    setInputText(\"\");\n  }\n    return (\n        <div>\n          <form >\n          <input  value={inputText} type=\"text\" placeholder=\"Add your task\" onChange={inputHandler}/>\n            <button onClick={submitHandler} type=\"submit\" >Add</button>\n          </form>  \n        </div>\n    )\n}\n\nexport default Form\n","import React from 'react'\n\nconst Todo = ({text,todo,todos,setTodos}) => {\n\n    const deleteHandler = () => {\n        setTodos(todos.filter(el=> el.id !== todo.id));\n        // console.log(todo);\n    }\n    return (\n        <div className=\"todo\">\n            <li className=\"todo-item\">{text}</li>\n            <button onClick={deleteHandler} className=\"trash-btn\" >\n               delete\n            </button>\n        </div>\n    );\n}\n\nexport default Todo\n","import React from 'react'\nimport Todo from './Todo'\nconst TodoList = ({todos,setTodos}) => {\n    return (\n        <div class=\"todo-container\">\n            <ul class=\"todo-list\">\n            {todos.map((todo)=>(\n                <Todo \n                 setTodos={setTodos} \n                 todos={todos} \n                 key={todo.id} \n                 todo={todo} \n                 text={todo.text} \n                 />\n                ))}\n                </ul>\n        </div>\n    )\n}\n\nexport default TodoList\n","import React,{useState}from 'react'\nimport Form from './components/Form'\nimport './App.css';\nimport TodoList from './components/TodoList';\n\n\nfunction App() {\n  const [inputText,setInputText]=useState(\"\");\n  const [todos,setTodos]=useState([]);\n\n  return (\n    <div className=\"App\">\n    <Form todos={todos} setTodos={setTodos}  inputText={inputText} setInputText={setInputText}/>\n    <TodoList todos={todos} setTodos={setTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}